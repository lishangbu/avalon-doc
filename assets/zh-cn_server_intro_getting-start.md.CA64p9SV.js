import{_ as i,c as s,o as e,ag as t}from"./chunks/framework.CcUoD1ZX.js";const k=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/server/intro/getting-start.md","filePath":"zh-cn/server/intro/getting-start.md","lastUpdated":1744515731000}'),l={name:"zh-cn/server/intro/getting-start.md"};function n(r,a,p,h,o,d){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>在开始之前，您首先应该：</p><ul><li>熟悉 Java 环境配置及其开发</li><li>熟悉 关系型 数据库，比如 Postgres</li><li>熟悉 <a href="https://spring.io/" target="_blank" rel="noreferrer">Spring Boot</a></li><li>熟悉 Java 构建工具，比如 Maven</li></ul><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><ul><li>一个JDK21环境</li><li>一款你熟悉的IDE或者编辑器，比如IntelliJ IDEA</li></ul><h3 id="下载项目" tabindex="-1">下载项目 <a class="header-anchor" href="#下载项目" aria-label="Permalink to &quot;下载项目&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  https://github.com/lishangbu/avalon</span></span></code></pre></div><p>之后就可以使用IDE打开对应项目了，</p><h3 id="生成运行必须的资源" tabindex="-1">生成运行必须的资源 <a class="header-anchor" href="#生成运行必须的资源" aria-label="Permalink to &quot;生成运行必须的资源&quot;">​</a></h3><p>从安全与git仓库占用等角度考虑，部分密钥以及IP数据库等大型文件并没有放入，因此在运行项目之前，需要执行项目根路径下的<code>scripts</code>文件夹中的<code>rsa-key-pair.sh</code>与<code>ip-data-downloader.sh</code>进行JWT RSA密钥生成与IP数据下载。</p><h3 id="初始化数据库" tabindex="-1">初始化数据库 <a class="header-anchor" href="#初始化数据库" aria-label="Permalink to &quot;初始化数据库&quot;">​</a></h3><p>项目本身采用的是<code>postgres</code>数据库,如果要更换其他数据库， 调整avalon-server的application.yml相关文件,并在avalon-server加入对应的数据库依赖，默认情况下，项目运行时会自动建表，如果需要改变这一行为，可以调整此处配置:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  jpa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    hibernate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      ddl-auto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">update</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #或者为 create,create-drop都能起到自动建表的效果</span></span></code></pre></div><h3 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h3><p>执行avalon-server模块下的AvalonStandaloneServerApplication的main方法，IDE会启动一个可运行的Spring Boot项目了。</p><p>为了开发体验，建议使用以下插件:</p><ul><li><a href="https://plugins.jetbrains.com/plugin/6317-lombok" target="_blank" rel="noreferrer">Lombok</a>(高版本IntelliJ IDEA 内置此插件)</li><li><a href="https://plugins.jetbrains.com/plugin/10036-mapstruct-support" target="_blank" rel="noreferrer">mapstruct-support</a></li></ul>`,17)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
