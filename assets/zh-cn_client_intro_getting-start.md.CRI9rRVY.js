import{_ as s,c as i,o as t,ag as e}from"./chunks/framework.XJrBLGj1.js";const k=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/client/intro/getting-start.md","filePath":"zh-cn/client/intro/getting-start.md","lastUpdated":1755959873000}'),n={name:"zh-cn/client/intro/getting-start.md"};function l(h,a,p,r,o,d){return t(),i("div",null,[...a[0]||(a[0]=[e('<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="前提知识" tabindex="-1">前提知识 <a class="header-anchor" href="#前提知识" aria-label="Permalink to &quot;前提知识&quot;">​</a></h2><p>在开始之前，您首先应该：</p><ul><li>熟悉 Node 环境配置及其开发</li><li>熟悉 <a href="https://quasar.dev/" target="_blank" rel="noreferrer">Quasar</a></li><li>熟悉 前端构建工具，比如 <a href="https://https://vitejs.cn/vite3-cn/guide/" target="_blank" rel="noreferrer">Vite</a></li></ul><h2 id="准备" tabindex="-1">准备 <a class="header-anchor" href="#准备" aria-label="Permalink to &quot;准备&quot;">​</a></h2><ul><li>一个node 20+的环境,推荐<a href="https://nodejs.org/zh-cn" target="_blank" rel="noreferrer">node</a>下载最新的LTS即可</li><li>一款你熟悉的IDE或者编辑器，比如Webstorm或者Vs Code皆可</li></ul><h2 id="下载项目" tabindex="-1">下载项目 <a class="header-anchor" href="#下载项目" aria-label="Permalink to &quot;下载项目&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  https://github.com/lishangbu/avalon-ui</span></span></code></pre></div><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h2><p>项目可以使用pnpm、npm、yarn进行依赖管理,以npm为例:</p><p>通过以下命令安装依赖即可:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span></code></pre></div><p>项目采用的protobuf交互需要编译Proto文件为静态TS类，通过protobufjs-cli</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> protobufjs-cli</span></span></code></pre></div><p>然后在项目根目录执行以下命令即可:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> proto</span></span></code></pre></div><p>此时导入项目进IDE应该不会报错了。</p><p>然后在项目根目录执行以下命令即可:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p>就可以启动开发服务器了。</p>',20)])])}const g=s(n,[["render",l]]);export{k as __pageData,g as default};
